Flask Terraform API Documentation
Base URL


http://127.0.0.1:5000/
1. POST /terraform
Description: Launch a new Terraform instance.

Request Body (JSON)
json:

    {
    "instance_type": "t2.micro",
    "ami_id": "ami-1234567890abcdef0",
    "region": "us-east-1"
    }
Success Response (200 OK)
json

    {
    "message": "Instance launched",
    "public_ip": "52.14.18.112",
    "vpc_id": "vpc-12345678",
    "subnet_id": "subnet-abcdef12"
    }
Error Response (400 Bad Request)
json

    {
    "error": "Invalid JSON data"
    }


2. GET /terraform/status
Description: Get the current status of the Terraform instance.

Success Response (200 OK)
json

    {
    "public_ip": "52.14.18.112",
    "vpc_id": "vpc-12345678",
    "subnet_id": "subnet-abcdef12"
    }
Pending Response (202 Accepted)
json

    {
    "status": "Instance launching..."
    }
Error Response (404 Not Found)
json

    {
    "status": "No instance deployed yet"
    }
3. GET /launch
Description: Redirect to the running instance in the browser.

Success Response (302 Redirect)
Redirects to:



http://52.14.18.112:8080

Error Response (404 Not Found)
json

    {
    "message": "Instance not ready yet"
    }
Summary of Endpoints

Endpoint	        Method	            Input	                        Output	                        Status Codes
/terraform	        POST	            JSON Terraform variables	    Public IP, VPC ID, Subnet ID	200, 400
/terraform/status	GET	                None	                        Public IP, VPC ID, Subnet ID	200, 202, 404
/launch	            GET	                None	                        Redirect to Public IP	        302, 404



Flow of the Application
/terraform is used to launch an instance.
/terraform/status is used to check the status of the instance and retrieve the Public IP, VPC ID, and Subnet ID.
/launch is used to redirect to the instance via the Public IP.